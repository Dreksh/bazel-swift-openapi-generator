# Adding the swift-openapi-generator
# (this will need to be replaced by a module_extension if it's not included in a bazel registry yet)
bazel_dep(name = "swift-openapi-generator", version = "1.0.0-alpha1")
local_path_override(module_name = "swift-openapi-generator", path = "../../")

# Copied from https://github.com/cgrindel/rules_swift_package_manager#quickstart
bazel_dep(name = "rules_swift_package_manager", version = "0.22.0")
single_version_override(
    module_name = "rules_swift_package_manager",
    patches = ["//:rules_swift_package_manager.patch"],
    patch_strip = 1, # Remove 1 directory level, as it's a git diff
)
bazel_dep(name = "gazelle", version = "0.34.0") # Needed for swift_package_manager
bazel_dep(name = "bazel_skylib", version = "1.5.0") # Needed for gazelle
bazel_dep(name = "rules_swift", version = "1.13.0") # Needed for Swift

# swift_deps START
swift_deps = use_extension(
    "@rules_swift_package_manager//:extensions.bzl",
    "swift_deps",
)
swift_deps.from_file(
    deps_index = "//:swift_deps_index.json",
)
use_repo(
    swift_deps,
    "swiftpkg_swift_openapi_generator",
    "swiftpkg_swift_openapi_runtime",
    "swiftpkg_swift_openapi_vapor",
    "swiftpkg_vapor",
)
# swift_deps END
